name: CI/CD - Jobhuntly Backend (dev)

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build
        # Nếu test fail do môi trường CI, có thể dùng:
        # run: ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/job-huntly-backend
          tags: |
            type=raw,value=dev-latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_ec2:
    runs-on: ubuntu-latest
    needs: build_and_push_image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Upload docker-compose.yml lên EC2 (để ~/jobhuntly/docker-compose.yml)
      - name: Upload docker-compose to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/jobhuntly/"

      # Ghi file .env trên EC2 từ GitHub Secrets
      - name: Write .env on EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            mkdir -p ~/jobhuntly
            cat > ~/jobhuntly/.env << 'EOF'
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            SPRING_JPA_DATABASE_PLATFORM=${{ secrets.SPRING_JPA_DATABASE_PLATFORM }}

            SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}

            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}
            
            APP_JWT_SECRET=${{ secrets.JWT_SECRET }}
            APP_JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}

            SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }}
            SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }}

            BACKEND_HOST=${{ secrets.BACKEND_HOST }}
            BACKEND_PREFIX=${{ secrets.BACKEND_PREFIX }}

            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}

            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            IMAGE_TAG=dev-latest
            EOF

      # Đăng nhập Docker Hub + Pull + Up -d
      - name: Deploy (pull & restart via docker compose)
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            cd ~/jobhuntly
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
                  # tạo network nếu chưa có
            docker network inspect customer-network >/dev/null 2>&1 || docker network create customer-network
            
            # dọn container cũ (nếu có) để tránh chiếm port/tên
            docker rm -f job-huntly-backend >/dev/null 2>&1 || true
            
            docker compose pull
            docker compose up -d --remove-orphans || true
            docker image prune -f